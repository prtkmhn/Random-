function RouteBoxer(){this.R=6371}RouteBoxer.prototype.box=function(t,e){this.grid_=null,this.latGrid_=[],this.lngGrid_=[],this.boxesX_=[],this.boxesY_=[];var r=null;if(t instanceof Array)r=t;else if(t instanceof google.maps.Polyline)if(t.getPath){r=new Array(t.getPath().getLength());for(var i=0;i<r.length;i++)r[i]=t.getPath().getAt(i)}else{r=new Array(t.getVertexCount());for(var o=0;o<r.length;o++)r[o]=t.getVertex(o)}return this.buildGrid_(r,e),this.findIntersectingCells_(r),this.mergeIntersectingCells_(),this.boxesX_.length<=this.boxesY_.length?this.boxesX_:this.boxesY_},RouteBoxer.prototype.buildGrid_=function(t,e){for(var r=new google.maps.LatLngBounds,i=0;i<t.length;i++)r.extend(t[i]);var o=r.getCenter();for(this.latGrid_.push(o.lat()),this.latGrid_.push(o.rhumbDestinationPoint(0,e).lat()),i=2;this.latGrid_[i-2]<r.getNorthEast().lat();i++)this.latGrid_.push(o.rhumbDestinationPoint(0,e*i).lat());for(i=1;this.latGrid_[1]>r.getSouthWest().lat();i++)this.latGrid_.unshift(o.rhumbDestinationPoint(180,e*i).lat());for(this.lngGrid_.push(o.lng()),this.lngGrid_.push(o.rhumbDestinationPoint(90,e).lng()),i=2;this.lngGrid_[i-2]<r.getNorthEast().lng();i++)this.lngGrid_.push(o.rhumbDestinationPoint(90,e*i).lng());for(i=1;this.lngGrid_[1]>r.getSouthWest().lng();i++)this.lngGrid_.unshift(o.rhumbDestinationPoint(270,e*i).lng());for(this.grid_=new Array(this.lngGrid_.length),i=0;i<this.grid_.length;i++)this.grid_[i]=new Array(this.latGrid_.length)},RouteBoxer.prototype.findIntersectingCells_=function(t){var e=this.getCellCoords_(t[0]);this.markCell_(e);for(var r=1;r<t.length;r++){var i=this.getGridCoordsFromHint_(t[r],t[r-1],e);(i[0]!==e[0]||i[1]!==e[1])&&(1===Math.abs(e[0]-i[0])&&e[1]===i[1]||e[0]===i[0]&&1===Math.abs(e[1]-i[1])?this.markCell_(i):this.getGridIntersects_(t[r-1],t[r],e,i),e=i)}},RouteBoxer.prototype.getCellCoords_=function(t){for(var e=0;this.lngGrid_[e]<t.lng();e++);for(var r=0;this.latGrid_[r]<t.lat();r++);return[e-1,r-1]},RouteBoxer.prototype.getGridCoordsFromHint_=function(t,e,r){var i,o;if(t.lng()>e.lng())for(i=r[0];this.lngGrid_[i+1]<t.lng();i++);else for(i=r[0];this.lngGrid_[i]>t.lng();i--);if(t.lat()>e.lat())for(o=r[1];this.latGrid_[o+1]<t.lat();o++);else for(o=r[1];this.latGrid_[o]>t.lat();o--);return[i,o]},RouteBoxer.prototype.getGridIntersects_=function(t,e,r,i){var o,s,n,h=t.rhumbBearingTo(e),a=t,l=r;if(e.lat()>t.lat()){for(n=r[1]+1;n<=i[1];n++)o=this.getGridIntersect_(t,h,this.latGrid_[n]),s=this.getGridCoordsFromHint_(o,a,l),this.fillInGridSquares_(l[0],s[0],n-1),a=o,l=s;this.fillInGridSquares_(l[0],i[0],n-1)}else{for(n=r[1];n>i[1];n--)o=this.getGridIntersect_(t,h,this.latGrid_[n]),s=this.getGridCoordsFromHint_(o,a,l),this.fillInGridSquares_(l[0],s[0],n),a=o,l=s;this.fillInGridSquares_(l[0],i[0],n)}},RouteBoxer.prototype.getGridIntersect_=function(t,e,r){var i=this.R*((r.toRad()-t.lat().toRad())/Math.cos(e.toRad()));return t.rhumbDestinationPoint(e,i)},RouteBoxer.prototype.fillInGridSquares_=function(t,e,r){var i;if(e>t)for(i=t;e>=i;i++)this.markCell_([i,r]);else for(i=t;i>=e;i--)this.markCell_([i,r])},RouteBoxer.prototype.markCell_=function(t){var e=t[0],r=t[1];this.grid_[e-1][r-1]=1,this.grid_[e][r-1]=1,this.grid_[e+1][r-1]=1,this.grid_[e-1][r]=1,this.grid_[e][r]=1,this.grid_[e+1][r]=1,this.grid_[e-1][r+1]=1,this.grid_[e][r+1]=1,this.grid_[e+1][r+1]=1},RouteBoxer.prototype.mergeIntersectingCells_=function(){var t,e,r,i=null;for(e=0;e<this.grid_[0].length;e++){for(t=0;t<this.grid_.length;t++)this.grid_[t][e]?(r=this.getCellBounds_([t,e]),i?i.extend(r.getNorthEast()):i=r):(this.mergeBoxesY_(i),i=null);this.mergeBoxesY_(i),i=null}for(t=0;t<this.grid_.length;t++){for(e=0;e<this.grid_[0].length;e++)this.grid_[t][e]?i?(r=this.getCellBounds_([t,e]),i.extend(r.getNorthEast())):i=this.getCellBounds_([t,e]):(this.mergeBoxesX_(i),i=null);this.mergeBoxesX_(i),i=null}},RouteBoxer.prototype.mergeBoxesX_=function(t){if(null!==t){for(var e=0;e<this.boxesX_.length;e++)if(this.boxesX_[e].getNorthEast().lng()===t.getSouthWest().lng()&&this.boxesX_[e].getSouthWest().lat()===t.getSouthWest().lat()&&this.boxesX_[e].getNorthEast().lat()===t.getNorthEast().lat())return void this.boxesX_[e].extend(t.getNorthEast());this.boxesX_.push(t)}},RouteBoxer.prototype.mergeBoxesY_=function(t){if(null!==t){for(var e=0;e<this.boxesY_.length;e++)if(this.boxesY_[e].getNorthEast().lat()===t.getSouthWest().lat()&&this.boxesY_[e].getSouthWest().lng()===t.getSouthWest().lng()&&this.boxesY_[e].getNorthEast().lng()===t.getNorthEast().lng())return void this.boxesY_[e].extend(t.getNorthEast());this.boxesY_.push(t)}},RouteBoxer.prototype.getCellBounds_=function(t){return new google.maps.LatLngBounds(new google.maps.LatLng(this.latGrid_[t[1]],this.lngGrid_[t[0]]),new google.maps.LatLng(this.latGrid_[t[1]+1],this.lngGrid_[t[0]+1]))},google.maps.LatLng.prototype.rhumbDestinationPoint=function(t,e){var r=6371,i=parseFloat(e)/r,o=this.lat().toRad(),s=this.lng().toRad();t=t.toRad();var n=o+i*Math.cos(t),h=n-o,a=Math.log(Math.tan(n/2+Math.PI/4)/Math.tan(o/2+Math.PI/4)),l=Math.abs(h)>1e-10?h/a:Math.cos(o),g=i*Math.sin(t)/l;Math.abs(n)>Math.PI/2&&(n=n>0?Math.PI-n:-(Math.PI-n));var _=(s+g+Math.PI)%(2*Math.PI)-Math.PI;return isNaN(n)||isNaN(_)?null:new google.maps.LatLng(n.toDeg(),_.toDeg())},google.maps.LatLng.prototype.rhumbBearingTo=function(t){var e=(t.lng()-this.lng()).toRad(),r=Math.log(Math.tan(t.lat().toRad()/2+Math.PI/4)/Math.tan(this.lat().toRad()/2+Math.PI/4));return Math.abs(e)>Math.PI&&(e=e>0?-(2*Math.PI-e):2*Math.PI+e),Math.atan2(e,r).toBrng()},Number.prototype.toRad=function(){return this*Math.PI/180},Number.prototype.toDeg=function(){return 180*this/Math.PI},Number.prototype.toBrng=function(){return(this.toDeg()+360)%360};